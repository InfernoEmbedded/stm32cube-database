<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<IP DBVersion="V4.0" Name="FREERTOS" Version="STM32Cube_FW_L0_V1.0.0" RootFolder="Middlewares/Third_Party/FreeRTOS/" CodeTemplate="" IncludeFile="cmsis_os.h"
    xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance"
    ns0:schemaLocation="http://mcd.rou.st.com/modules.php?name=mcu ../../../../../../../doc/V4/Development/Specifications/db/IP_Configs.xsd"
    xmlns="http://mcd.rou.st.com/modules.php?name=mcu">

    <RefConfig Name="FREERTOS_ENABLE_Init" Comment="">       
        <CallLibMethod Name="osKernelStart"/>                 
        <Component Name="Middleware:FREERTOS:HEAP:$HEAP_NUMBER"/>
        <ConfigFile Name="CONFIG"/>
        <ConfigFile Name="HOOKS"/>
        <ConfigFile Name="THREADS"/>
        <ConfigFile Name="INC"/>
        <ConfigFile Name="VARS"/>
        <ConfigFile Name="THREADS_CODE"/>
    </RefConfig>
        
    <LibMethod Name="osKernelStart" Comment="Start scheduler">
        <Argument Name="thread_def" GenericType="baseaddress" TypeName="osThreadDef_t *" Context="local"/>
        <Argument Name="argument" GenericType="baseaddress" TypeName="void *" Context="local"/>
    </LibMethod>
    
    <RefComponent Cclass="Middleware" Cgroup="FREERTOS" Cversion="7.6.0">
        <File Name="Source/include/*.h" Category="header"/>
        <File Name="Source/*.c" Category="source"/>
        <File Name="Source/CMSIS_RTOS/*.c" Category="source"/>
        <File Name="Source/CMSIS_RTOS/*.h" Category="header"/>
        
        <SubComponent Csub="HEAP" Cvariant="1" >
            <File Name="Source/portable/MemMang/heap_1.c" Category="source"/>
        </SubComponent>
        <SubComponent Csub="HEAP" Cvariant="2" >
            <File Name="Source/portable/MemMang/heap_2.c" Category="source"/>
        </SubComponent>
        <SubComponent Csub="HEAP" Cvariant="3" >
            <File Name="Source/portable/MemMang/heap_3.c" Category="source"/>
        </SubComponent>
        <SubComponent Csub="HEAP" Cvariant="4" >
            <File Name="Source/portable/MemMang/heap_4.c" Category="source"/>
        </SubComponent>
      
        <SubComponent Csub="IAR" >
            <File Name="Source/portable/IAR/ARM_CM0/port.c" Category="source"/>
            <File Name="Source/portable/IAR/ARM_CM0/portasm.s" Category="source"/>
            <File Name="Source/portable/IAR/ARM_CM0/portmacro.h" Category="header"/>
        </SubComponent>
        <SubComponent Csub="Keil" >    <!-- Keil refers to RVDS files -->
            <File Name="Source/portable/RVDS/ARM_CM0/port.c" Category="source"/>
            <File Name="Source/portable/RVDS/ARM_CM0/portmacro.h" Category="header"/>
        </SubComponent> 
        <SubComponent Csub="RVDS" >
            <File Name="Source/portable/RVDS/ARM_CM0/port.c" Category="source"/>
            <File Name="Source/portable/RVDS/ARM_CM0/portmacro.h" Category="header"/>
        </SubComponent> 
        <SubComponent Csub="GCC" >
            <File Name="Source/portable/GCC/ARM_CM0/port.c" Category="source"/>
            <File Name="Source/portable/GCC/ARM_CM0/portmacro.h" Category="header"/>
        </SubComponent> 
        <SubComponent Csub="Tasking" >
            <File Name="Source/portable/Tasking/ARM_CM0/port.c" Category="source"/>
            <File Name="Source/portable/Tasking/ARM_CM0/port_asm.asm" Category="source"/>
            <File Name="Source/portable/Tasking/ARM_CM0/portmacro.h" Category="header"/>
        </SubComponent>
    </RefComponent>
    
    
    <RefConfigFile Name="INC" Description="Header file for #include" Template="freertos_inc.ftl">
        <File Name="rtos_inc.tmp" Category="source" Version="7.6.0" Condition="all"/>
    </RefConfigFile>
    <RefConfigFile Name="VARS" Description="Variable declarations for FreeRTOS" Template="freertos_vars.ftl">
        <File Name="rtos_vars.tmp" Category="source" Version="7.6.0" Condition="all"/>
    </RefConfigFile>
    <RefConfigFile Name="THREADS_CODE" Description="Thread code for FreeRTOS" Template="freertos_threads.ftl">
        <File Name="rtos_threads.tmp" Category="source" Version="7.6.0" Condition="all"/>
    </RefConfigFile>
    <RefConfigFile Name="THREADS" Description="Definition and creation of threads, then launch the RTOS" Template="freertos_init_c.ftl">
        <File Name="rtos_HalInit.tmp" Category="source" Version="7.6.0" Condition="all"/>
        <!-- Parameters for FReeRTOS -->
    </RefConfigFile>
    
    <RefConfigFile Name="HOOKS" Description="Ooptional hook functions" Template="freertos_c.ftl">
        <File Name="freertos.c" Category="source" Version="7.6.0" Condition="all"/>
        <Argument Name="configGENERATE_RUN_TIME_STATS" GenericType="simple" Comment="When set to 1, a collection of run time statistics is enabled"/>
        <Argument Name="configUSE_IDLE_HOOK" GenericType="simple" Comment="Set to 1 if you wish to use an idle hook, or 0 to omit it"/>
        <Argument Name="configUSE_TICK_HOOK" GenericType="simple" Comment="Set to 1 if you wish to use a tick hook, or 0 to omit it"/>
        <Argument Name="configCHECK_FOR_STACK_OVERFLOW" GenericType="simple" Comment=""/>
        <Argument Name="configUSE_MALLOC_FAILED_HOOK" GenericType="simple" Comment="Set to 1 if you wish to use a malloc failed hook, or 0 to omit it"/>
    </RefConfigFile>
    
    <!-- use generic template file "mw_conf.ftl" to generate header file containing #define -->
    <RefConfigFile Name="CONFIG" Description="Header file for #define" Template="freertos_conf.ftl">
        <File Name="FreeRTOSConfig.h" Category="header" Version="7.6.0" Condition="all"/>
        <!-- Parameters for FReeRTOS -->
        <Argument Name="configUSE_PREEMPTION" GenericType="simple" Comment="Set to 1 to use the preemptive RTOS scheduler, or 0 to use the cooperative RTOS scheduler. "/>
        <Argument Name="configCPU_CLOCK_HZ" GenericType="simple" Comment="Frequency in Hz of the internal CPU clock"/>
        <Argument Name="configTICK_RATE_HZ" GenericType="simple" Comment="The frequency of the RTOS tick interrupt"/>
        <Argument Name="configMAX_PRIORITIES" GenericType="simple" Comment="The number of priorities available to the application tasks"/>
        <Argument Name="configMINIMAL_STACK_SIZE" GenericType="simple" Comment="The size of the stack used by the idle task"/>
        <Argument Name="configTOTAL_HEAP_SIZE" GenericType="simple" Comment="The total amount of RAM available to the RTOS kernel"/>
        <Argument Name="configMAX_TASK_NAME_LEN" GenericType="simple" Comment="The maximum permissible length of the descriptive name given to a task when the task is created"/>
        <Argument Name="configUSE_16_BIT_TICKS" GenericType="simple" Comment=""/>
        <Argument Name="configIDLE_SHOULD_YIELD" GenericType="simple" Comment="This parameter controls the behaviour of tasks at the idle priority"/>
        <Argument Name="configUSE_MUTEXES" GenericType="simple" Comment="Set to 1 to include mutex functionality, or 0 to omit it"/>
        <Argument Name="configUSE_RECURSIVE_MUTEXES" GenericType="simple" Comment="Set to 1 to include recursive mutex functionality, or 0 to omit it"/>  
        <Argument Name="configUSE_COUNTING_SEMAPHORES" GenericType="simple" Comment="Set to 1 to include counting semaphore functionality, or 0 to omit it"/>  
        <Argument Name="configQUEUE_REGISTRY_SIZE" GenericType="simple" Comment="Defines the maximum number of queues and semaphores that can be registered."/>
        <Argument Name="configUSE_APPLICATION_TASK_TAG" GenericType="simple" Comment=""/>
        
        <Argument Name="configUSE_IDLE_HOOK" GenericType="simple" Comment="Set to 1 if you wish to use an idle hook, or 0 to omit it"/>
        <Argument Name="configUSE_TICK_HOOK" GenericType="simple" Comment="Set to 1 if you wish to use a tick hook, or 0 to omit it"/>
        <Argument Name="configUSE_MALLOC_FAILED_HOOK" GenericType="simple" Comment="Set to 1 if you wish to use a malloc failed hook, or 0 to omit it"/>
        
        <!--  <Argument Name="configUSE_TICK_HOOK" GenericType="simple" Comment=
            "&#xD;Tick hook: when set to 1, the application must provide the hook function (a callback) with the following prototype: &#xD;    void vApplicationTickHook( void );&#xD;"/> -->
        <Argument Name="configCHECK_FOR_STACK_OVERFLOW" GenericType="simple" Comment=""/>
        
        <Argument Name="configUSE_TRACE_FACILITY" GenericType="simple" Comment="Set to 1 to include additional structure members and functions to assist with execution visualisation and tracing"/>    
        <Argument Name="configGENERATE_RUN_TIME_STATS" GenericType="simple" Comment="When set to 1, a collection of run time statistics is enabled"/>

        <Argument Name="configUSE_CO_ROUTINES" GenericType="simple" Comment="Set to 1 to include co-routine functionality, or 0 to omit it"/>
        <Argument Name="configMAX_CO_ROUTINE_PRIORITIES" GenericType="simple" Comment="The number of priorities available to the application co-routines."/>
              
        <Argument Name="configUSE_TIMERS" GenericType="simple" Comment="Set to 1 to include software timer functionality, or 0 to omit it"/>
        <Argument Name="configTIMER_TASK_PRIORITY" GenericType="simple" Comment="Sets the priority of the software timer service/daemon task"/>
        <Argument Name="configTIMER_QUEUE_LENGTH" GenericType="simple" Comment="Sets the length of the software timer command queue"/>
        <Argument Name="configTIMER_TASK_STACK_DEPTH" GenericType="simple" Comment="Sets the size of the stack (in words, not bytes) allocated to the timer service task."/>
        
        <!-- <Argument Name="configKERNEL_INTERRUPT_PRIORITY" GenericType="simple" Comment=""/>  -->
        <Argument Name="configLIBRARY_LOWEST_INTERRUPT_PRIORITY" GenericType="simple" Comment=""/>
        <!-- <Argument Name="configKERNEL_INTERRUPT_PRIORITY" GenericType="simple" Comment=""/>  -->
        <Argument Name="configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY" GenericType="simple" Comment=""/>
        
        <Argument Name="configPRIO_BITS" GenericType="simple" Comment=""/>
        
        <Argument Name="INCLUDE_vTaskPrioritySet" GenericType="simple" Comment=""/>
        <Argument Name="INCLUDE_uxTaskPriorityGet" GenericType="simple" Comment=""/>
        <Argument Name="INCLUDE_vTaskDelete" GenericType="simple" Comment=""/>
        <Argument Name="INCLUDE_vTaskCleanUpResources" GenericType="simple" Comment=""/>
        <Argument Name="INCLUDE_vTaskSuspend" GenericType="simple" Comment=""/>
        <Argument Name="INCLUDE_vTaskDelayUntil" GenericType="simple" Comment=""/>
        <Argument Name="INCLUDE_vTaskDelay" GenericType="simple" Comment=""/>  
        <Argument Name="INCLUDE_xTaskGetSchedulerState" GenericType="simple" Comment=""/> 
        
        <Argument Name="configASSERT( x )" GenericType="simple" Comment=""/>
        
        <!-- <Argument Name="configUSE_MALLOC_FAILED_HOOK" GenericType="simple" Comment=""/> -->
        <!-- <Argument Name="configUSE_APPLICATION_TASK_TAG" GenericType="simple" Comment=""/> -->
        
    </RefConfigFile>
    
</IP>
